#pragma once

#include "CLIB_Texture.h"
#include "CLIB_Anime.h"

enum TEXTUREGROUP{
	ANIME_NO_SHANA = 0,
	ANIME_NO_WIL = 1,
	ANIMEGROUP_NO_EFFECT = 10,
	TEXTURE_NO_SHANA = 0,
	TEXTURE_NO_WIL = 1,
	TEXTUREGROUP_CHARACTOR = 0,
	TEXTUREGROUP_CHARA_SHANA = 10,
	TEXTUREGROUP_CHARA_VILL = 20,
	TEXTUREGROUP_EFFECT = 30,
	TEXTUREGROUP_STAGE = 60,
	TEXTUREGROUP_CHARA_SELECT = 70,
	TEXTUREGROUP_SYSTEM = 80
};

enum TEXTURE{
	
};

enum DOT_SYANA{
	DOT_SYA_001 = 0,
	DOT_SYA_022 ,
	DOT_SYA_002 ,
	DOT_SYA_004 ,
	DOT_SYA_005 ,
	DOT_SYA_035 ,
	DOT_SYA_999 ,
	DOT_SYA_037 ,
	DOT_SYA_038 ,
	DOT_SYA_433 ,
	DOT_SYA_418 ,
	DOT_SYA_039 ,
	DOT_SYA_040 ,
	DOT_SYA_045 ,
	DOT_SYA_211
};

enum ENUM_ANIME_KIND{
	DOT_SYA_ANIME_NUTRAL = 0,
	DOT_SYA_ANIME_WALK_FORWARD ,
	DOT_SYA_ANIME_WALK_BACK ,
	DOT_SYA_ANIME_DUSH_FORWARD ,
	DOT_SYA_ANIME_DUSH_BACK ,
	DOT_SYA_ANIME_JUMP ,
	DOT_SYA_ANIME_JUMP_DUSH_FORWARD ,
	DOT_SYA_ANIME_JUMP_DUSH_BACK ,
	DOT_SYA_ANIME_CROUCH ,
	DOT_SYA_ANIME_ATTACK_LOW ,
	DOT_SYA_ANIME_ATTACK_MID ,
	DOT_SYA_ANIME_ATTACK_HIGH ,
	DOT_SYA_ANIME_ATTACK_EX ,
	DOT_SYA_ANIME_CROUCH_ATTACK_LOW ,
	DOT_SYA_ANIME_CROUCH_ATTACK_MID ,
	DOT_SYA_ANIME_CROUCH_ATTACK_HIGH ,

	DOT_WILL_ANIME_NUTRAL = 0,
	DOT_WILL_ANIME_WALK_FORWARD ,
	DOT_WILL_ANIME_WALK_BACK ,
	DOT_WILL_ANIME_DUSH_FORWARD ,
	DOT_WILL_ANIME_DUSH_BACK ,
	DOT_WILL_ANIME_BACK_JUMP ,
	DOT_WILL_ANIME_BACK_JUMP1 ,
	DOT_WILL_ANIME_BACK_JUMP2 ,
	DOT_WILL_ANIME_JUMP ,
	DOT_WILL_ANIME_JUMP1 ,
	DOT_WILL_ANIME_JUMP2 ,
	DOT_WILL_ANIME_JUMP3 ,
	DOT_WILL_ANIME_JUMP4 ,
	DOT_WILL_ANIME_JUMP_DUSH_FORWARD ,
	DOT_WILL_ANIME_JUMP_DUSH_FORWARD1 ,
	DOT_WILL_ANIME_JUMP_DUSH_BACK ,
	DOT_WILL_ANIME_JUMP_DAMAGE ,
	DOT_WILL_ANIME_CROUCH ,
	DOT_WILL_ANIME_ATTACK_LOW ,
	DOT_WILL_ANIME_ATTACK_MID ,
	DOT_WILL_ANIME_ATTACK_HIGH ,
	DOT_WILL_ANIME_ATTACK_HIGH_FOR,
	DOT_WILL_ANIME_ATTACK_EX ,
	DOT_WILL_ANIME_CROUCH_ATTACK_LOW ,
	DOT_WILL_ANIME_CROUCH_ATTACK_MID ,
	DOT_WILL_ANIME_CROUCH_ATTACK_HIGH ,
	DOT_WILL_ANIME_CROUCH_ATTACK_EX ,
	DOT_WILL_ANIME_THROW ,
	DOT_WILL_ANIME_DAMAGE ,
	DOT_WILL_ANIME_DAMAGE_DOWN ,
	DOT_WILL_ANIME_CROUCH_DAMAGE ,
	DOT_WILL_ANIME_DAMAGE_AERIAL_UP ,
	DOT_WILL_ANIME_DAMAGE_AERIAL_DOWN ,
	DOT_WILL_ANIME_DAMAGE_BLOW_DOWN ,
	DOT_WILL_ANIME_RECOVER ,
	DOT_WILL_ANIME_DAMAGE_WALL ,
	DOT_WILL_ANIME_JUMP_ATTACK_LOW ,
	DOT_WILL_ANIME_JUMP_ATTACK_MID ,
	DOT_WILL_ANIME_JUMP_ATTACK_HIGH ,
	DOT_WILL_ANIME_SPECIAL1,
	DOT_WILL_ANIME_SPECIAL2,
	DOT_WILL_ANIME_GUARD,
	DOT_WILL_ANIME_AIR_GUARD,
	DOT_WILL_ANIME_CROUCH_GUARD,
	DOT_WILL_ANIME_THROW_CHANCEL,
	DOT_WILL_ANIME_DOWN_UP,
	DOT_WILL_ANIME_DOWN_ROW,
	DOT_WILL_ANIME_DAMAGE_LOW,
	DOT_WILL_ANIME_THROW_MISS
};

enum TEX_NO_EFFECT{
	TEXTURE_NO_EFF_GUARD_CANCEL = TEXTUREGROUP_EFFECT,
	TEXTURE_NO_EFF_HIT_ZAN1,
	TEXTURE_NO_EFF_SHA802_1,
	TEXTURE_NO_EFF_SYOUGEKI,
	TEXTURE_NO_EFF_SHA308,
	TEXTURE_NO_EFF_HIT_ZAN2,
	TEXTURE_NO_EFF_GUARD,
	TEXTURE_NO_EFF_SHA303_1,
	TEXTURE_NO_EFF_SHA_AIRDASH_FRONT,
	TEXTURE_NO_EFF_SHA408,
	TEXTURE_NO_EFF_JUMP_LANDING,
	TEXTURE_NO_EFF_SHA802_2,
	TEXTURE_NO_EFF_SHA303_2,
	TEXTURE_NO_EFF_HIT_UPPER,
	TEXTURE_NO_EFF_HIT_LINE,
	TEXTURE_NO_EFF_TAIKUUTI
};

enum TEX_NO_SYSTEM{
	TEXTURE_NO_SYS_TIME = TEXTUREGROUP_SYSTEM,
	TEXTURE_NO_SYS_HP,
	TEXTURE_NO_SYS_SP,
	TEXTURE_NO_SYS_BATTLE_MENU,
	TEXTURE_NO_SYS_COMBO,
	TEXTURE_NO_SYS_BACK_WHITE,
	TEXTURE_NO_SYS_TITLE_ZAN,
	TEXTURE_NO_SYS_TITLE_ZAN_ANIIME,
	TEXTURE_NO_SYS_CHILD_LOGO,
	TEXTURE_NO_SYS_TITLE_MENU,
	TEXTURE_NO_SYS_TITLE_REIJI_MAIGO
};

enum TEX_NO_STAGE{
	TEXTURE_NO_STA_RURIDAN = TEXTUREGROUP_STAGE,

};

enum TEX_NO_CHARA_SELECT{
	TEXTURE_NO_CHARA_SELECT_MENU = TEXTUREGROUP_CHARA_SELECT,
	TEXTURE_NO_CHARA_SELECT_CUTIN,
	TEXTURE_NO_CHARA_SELECT_PUCHI,
	TEXTURE_NO_CHARA_SELECT_BACK
};

enum ANIME_NO_EFFECT{
	ANIME_NO_EFF_ACTION_003 = ANIMEGROUP_NO_EFFECT,
	ANIME_NO_EFF_ACTION_01,
	ANIME_NO_EFF_ACTION_02_1,
	ANIME_NO_EFF_ACTION_02_2,
	ANIME_NO_EFF_ATTACK_001,
	ANIME_NO_EFF_GUARD_001,
	ANIME_NO_EFF_HIT_001,
	ANIME_NO_EFF_HIT_002,
	ANIME_NO_EFF_HIT_003,
	ANIME_NO_EFF_HIT_004_1,
	ANIME_NO_EFF_HIT_004_2,
	ANIME_NO_EFF_HIT_004_3,
	ANIME_NO_EFF_HIT_004_4,
	ANIME_NO_EFF_HIT_005,
	ANIME_NO_EFF_HIT_006,
	ANIME_NO_EFF_HIT_007_1,
	ANIME_NO_EFF_HIT_007_2,
	ANIME_NO_EFF_HIT_008,
	ANIME_NO_EFF_HIT_009,
	ANIME_NO_EFF_HIT_010,
	ANIME_NO_EFF_HIT_011,
	ANIME_NO_EFF_SHANA_OPT,
	ANIME_NO_EFF_SHANA_OPT_PARTS,
	ANIME_NO_EFF_TEST,
	ANIME_NO_EFF_X
};

enum ANIME_NO_SYSTEM{
	ANIME_NO_SYS_BATTLE_MENU = ANIME_NO_EFF_X+1,
	ANIME_NO_SYS_ENDAN,
	ANIME_NO_SYS_SCN_BACK,
	ANIME_NO_SYS_SCN_BACK_MISAGO,
	ANIME_NO_SYS_SCN_COMBO_INFO,
	ANIME_NO_SYS_SCN_HP_GAUGE,
	ANIME_NO_SYS_SCN_SP_GAUGE,
	ANIME_NO_SYS_LOGO_2,
	ANIME_NO_SYS_TIMER,
	ANIME_NO_SYS_ATTACK_AREA,
	ANIME_NO_SYS_RIBBON
};

enum ANIME_NO_TITLE{
	ANIME_NO_SYS_TITLE = ANIME_NO_SYS_ATTACK_AREA+1,
	ANIME_NO_SYS_TITLE_FLASH,
	ANIME_NO_SYS_TITLE_LOGO,
	ANIME_NO_SYS_TITLE_MENU,
	ANIME_NO_SYS_TITLE_MODEL,
	ANIME_NO_SYS_TITLE_PART_B,
	ANIME_NO_SYS_TITLE_ROD
};

enum ANIME_NO_CHARA_SELECT{
	ANIME_NO_CHARA_SELECT = ANIME_NO_SYS_TITLE_ROD+1,
	ANIME_NO_CHARA_SELECT_MENU,
	ANIME_NO_CHARA_SELECT_CUTIN,
	ANIME_NO_CHARA_SELECT_PUCHI,
	ANIME_NO_CHARA_SELECT_BACK
};

enum SPRITE_NO{
	SPRITE_NO_EFFECT_ACTION_001	= 0,
	SPRITE_NO_EFFECT_ACTION_002,
	SPRITE_NO_EFFECT_ACTION_002_1,
	SPRITE_NO_EFFECT_ACTION_002_2,
	SPRITE_NO_EFFECT_ATTACK_001,
	SPRITE_NO_EFFECT_GUARD_001,
	SPRITE_NO_EFFECT_HIT_001,
	SPRITE_NO_EFFECT_HIT_002,
	SPRITE_NO_EFFECT_HIT_003,
	SPRITE_NO_EFFECT_HIT_004,
	SPRITE_NO_EFFECT_HIT_004_1,
	SPRITE_NO_EFFECT_HIT_004_2,
	SPRITE_NO_EFFECT_HIT_004_3,
	SPRITE_NO_EFFECT_HIT_004_4,
	SPRITE_NO_EFFECT_HIT_005,
	SPRITE_NO_EFFECT_HIT_006,
	SPRITE_NO_EFFECT_HIT_007,
	SPRITE_NO_EFFECT_HIT_007_1,
	SPRITE_NO_EFFECT_HIT_007_2,
	SPRITE_NO_EFFECT_HIT_008,
	SPRITE_NO_EFFECT_HIT_009,
	SPRITE_NO_EFFECT_HIT_010,
	SPRITE_NO_EFFECT_HIT_011,
	SPRITE_NO_EFFECT_SHANA_OPT,
	SPRITE_NO_EFFECT_SHANA_OPT_PARTS,
	SPRITE_NO_EFFECT_TEST,
	SPRITE_NO_EFFECT_TEST_X,
	SPRITE_NO_MAX
};

//==============================================================
// テクスチャーリストクラス管理
//==============================================================
class CTextureGroupManager{
public:
	CTextureGroup**	m_texGroup;
	int				m_numGroup;

	CTextureGroupManager( LPDIRECT3DDEVICE9 d3ddevice );
	virtual ~CTextureGroupManager();

	void	SetupTextureGroup( CTextureGroup* tex, int CHARA_NO, int param1 = 0 );// テクスチャーグループにイメージを読み込ませる
	CTextureGroup* GetTextureGroup( int GROUP_NO );					// テクスチャーテーブルを返す

private:
	int		GetTextureNo( int GROUP_NO );							// テクスチャーテーブル番号を返す
	void	Reset( int GROUP_NO );

};

//==============================================================
// アニメーションクラス管理
//==============================================================
class CAnimationManager{
public:
	CAnimeSpec*		m_animeGroup;
	int				m_numGroup;

	CAnimationManager();
	virtual ~CAnimationManager();

	void		SetupAnimation( CAnimeSpec* anime, int CHARA_NO );			// アニメーションクラスにイメージを読み込ませる
	CAnimeSpec* GetAnimation( int GROUP_NO );						// アニメーションテーブルを返す

private:
	int		GetAnimationNo( int GROUP_NO );							// アニメーションテーブル番号を返す
	void	Reset( int GROUP_NO );

};
