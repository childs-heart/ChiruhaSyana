//-----------------------------------------------------------------------------------------
// 定数
//-----------------------------------------------------------------------------------------
// 重複インクルードの回避
#ifndef __DSOUNDMAIN
#define __DSOUNDMAIN

#include <windows.h>
#include <dsound.h>

#define RELEASE_SOUND(x) 	if(x){x->Release();x=NULL;}
//#define SE_MAX 59 //SE数
#define WORD_MAX 512 //文字数

extern bool DSOUND_END();
extern bool Dsoundinit(HWND hwnd);

// セカンダリバッファと読み込むファイル名を持つ構造体


// DirectSoundオブジェクト

extern LPDIRECTSOUND8		lpDS;
extern LPDIRECTSOUNDBUFFER	lpDSP;

// SEの配列名
enum ENUM_SE_NUMBER{

/*  ENUMの例*/

	_ENUM_TESTCHAR_STATE_INIT			,
	_ENUM_TESTCHAR_STATE_NONE			,
	_ENUM_TESTCHAR_GROUND				,
	_ENUM_TESTCHAR_STATE_NEUTRAL			,
	_ENUM_TESTCHAR_STATE_WALK_FORWARD	,
	_ENUM_TESTCHAR_STATE_WALK_BACK		,
	_ENUM_TESTCHAR_STATE_ATTACK_LOW		,
	_ENUM_TESTCHAR_STATE_ATTACK_MID		,
	_ENUM_TESTCHAR_STATE_ATTACK_HIGH		,
	_ENUM_TESTCHAR_STATE_ATTACK_EX		,
//
	_ENUM_TESTCHAR_STATE_DAMAGE			,
	_ENUM_TESTCHAR_STATE_BIG_DAMAGE		,
	_ENUM_TESTCHAR_STATE_GUARD			,
	_ENUM_TESTCHAR_STATE_CROUCH_DAMAGE	,
	_ENUM_TESTCHAR_STATE_CROUCH			,
	_ENUM_TESTCHAR_STATE_CROUCH_FORWARD	,
	_ENUM_TESTCHAR_STATE_CROUCH_BACK		,
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_LOW,
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_MID,
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_HIGH,
//
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX,
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX_START,
	_ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX_END,
	_ENUM_TESTCHAR_STATE_CROUCH_GUARD	,
	_ENUM_TESTCHAR_STATE_JUMP_SETUP		,

	_ENUM_TESTCHAR_STATE_DUSH_FORWARD	,
	_ENUM_TESTCHAR_STATE_DUSH_FORWARD_END,
	_ENUM_TESTCHAR_STATE_DUSH_BACK		,

	_ENUM_TESTCHAR_STATE_JUMP			,
	_ENUM_TESTCHAR_STATE_JUMP_NORMAL		,
//
	_ENUM_TESTCHAR_STATE_JUMP_FORWARD	,
	_ENUM_TESTCHAR_STATE_JUMP_BACK		,
	_ENUM_TESTCHAR_STATE_JUMP_ATTACK_HIGH,
	_ENUM_TESTCHAR_STATE_JUMP_ATTACK_LOW,
	_ENUM_TESTCHAR_STATE_JUMP_ATTACK_MID,
	_ENUM_TESTCHAR_STATE_JUMP_ATTACK_EX,
	_ENUM_TESTCHAR_STATE_JUMP_DUSH_FORWARD,
	_ENUM_TESTCHAR_STATE_JUMP_DUSH_BACK	,
	_ENUM_TESTCHAR_STATE_JUMP_DUSH_END	,
	_ENUM_TESTCHAR_STATE_JUMP_DAMAGE,
//
	_ENUM_TESTCHAR_STATE_JUMP_AERIAL_DAMAGE,
	_ENUM_TESTCHAR_STATE_JUMP_BLOW_DOWN	,
	_ENUM_TESTCHAR_STATE_JUMP_WALL_BOUND	,
	_ENUM_TESTCHAR_STATE_JUMP_GUARD		,
	_ENUM_TESTCHAR_STATE_JUMP_RECOVER	,

	_ENUM_TESTCHAR_STATE_DOWN			,
	_ENUM_TESTCHAR_STATE_GETUP			,			

	_ENUM_TESTCHAR_STATE_THROW_STANDBY	,
	_ENUM_TESTCHAR_STATE_THROW			,
	_ENUM_TESTCHAR_STATE_MISS_THROW		,
//
	_ENUM_TESTCHAR_STATE_DAMAGE_THROW	,

	_ENUM_TESTCHAR_STATE_SPECIAL_1		,
	_ENUM_TESTCHAR_STATE_SPECIAL_1_END	,
	_ENUM_TESTCHAR_STATE_SPECIAL_2		,
	_ENUM_TESTCHAR_STATE_SPECIAL_3_1		,
	_ENUM_TESTCHAR_STATE_SPECIAL_3_2		,

	_ENUM_TESTCHAR_STATE_FREEZE			,

	ENUM_BGM_TITLE						,
	SE_MAX,

};

// 読み込むファイル名
// ENUM_SE_NUMBERとあわせて変更してください
const char cSEFileName[SE_MAX + 1][WORD_MAX] = {

	//読み込みファイルの例

	//基本動作

	"mute.wav",		//ENUM_TESTCHAR_STATE_INIT
	"mute.wav",		//ENUM_TESTCHAR_STATE_NONE
	"mute.wav",		//ENUM_TESTCHAR_GROUND
	"mute.wav",		//ENUM_TESTCHAR_STATE_NEUTRAL
	"mute.wav",		//ENUM_TESTCHAR_STATE_WALK_FORWARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_WALK_BACK
	"swing24_c.wav",		//ENUM_TESTCHAR_STATE_ATTACK_LOW
	"swing06_h.wav",		//ENUM_TESTCHAR_STATE_ATTACK_MID
	"swing06_r.wav",		//ENUM_TESTCHAR_STATE_ATTACK_HIGH
	"swing24_b.wav",		//ENUM_TESTCHAR_STATE_ATTACK_EX
//
	"mute.wav",		//ENUM_TESTCHAR_STATE_DAMAGE
	"mute.wav",		//ENUM_TESTCHAR_STATE_BIG_DAMAGE
	"gun20_b.wav",	//ENUM_TESTCHAR_STATE_GUARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_DAMAGE
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_FORWARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_BACK
	"swing24_c.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_LOW
	"swing30_c.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_MID
	"swing06_r.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_HIGH
//
	"don14c.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX_START
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_ATTACK_EX_END
	"mute.wav",		//ENUM_TESTCHAR_STATE_CROUCH_GUARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_SETUP

	//ダッシュ
	"dash01.wav",		//ENUM_TESTCHAR_STATE_DUSH_FORWARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_DUSH_FORWARD_END
	"b_dash3.wav",		//ENUM_TESTCHAR_STATE_DUSH_BACK

	//ジャンプ関連
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP 抜け
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_NORMAL
//
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_FORWARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_BACK
	"swing06_r.wav",		//ENUM_TESTCHAR_STATE_JUMP_ATTACK_HIGH
	"swing24_c.wav",		//ENUM_TESTCHAR_STATE_JUMP_ATTACK_LOW
	"swing31_a.wav",		//ENUM_TESTCHAR_STATE_JUMP_ATTACK_MID
	"swing27.wav",		//ENUM_TESTCHAR_STATE_JUMP_ATTACK_EX
	"j_dash06.wav",		//ENUM_TESTCHAR_STATE_JUMP_DUSH_FORWARD
	"j_dash06.wav",		//ENUM_TESTCHAR_STATE_JUMP_DUSH_BACK
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_DUSH_END
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_DAMAGE
//
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_AERIAL_DAMAGE
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_BLOW_DOWN
	"bosu15.wav",		//ENUM_TESTCHAR_STATE_JUMP_WALL_BOUND
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_GUARD
	"mute.wav",		//ENUM_TESTCHAR_STATE_JUMP_RECOVER

	//起き上がり関連
	"bosu35.wav",		//ENUM_TESTCHAR_STATE_DOWN
	"mute.wav",		//ENUM_TESTCHAR_STATE_GETUP

	//投げ関連
	"mute.wav",		//ENUM_TESTCHAR_STATE_THROW_STANDBY
	"mute.wav",		//ENUM_TESTCHAR_STATE_THROW
	"mute.wav",		//ENUM_TESTCHAR_STATE_MISS_THROW
//
	"mute.wav",		//ENUM_TESTCHAR_STATE_DAMAGE_THROW

	//必殺技関連

	"swing40_a.wav",		//ENUM_TESTCHAR_STATE_SPECIAL_1
	"mute.wav",		//ENUM_TESTCHAR_STATE_SPECIAL_1_END
	"gun23x.wav",		//ENUM_TESTCHAR_STATE_SPECIAL_2
	"swing_fire.wav",		//ENUM_TESTCHAR_STATE_SPECIAL_3_1
	"swing06_h.wav",		//ENUM_TESTCHAR_STATE_SPECIAL_3_2

	"mute.wav",		//ENUM_TESTCHAR_STATE_FREEZE

	"shana02_01.wav","mute.wav"	// タイトル

};

typedef struct SBNameArr{
	LPDIRECTSOUNDBUFFER SB_lpDSB;
	char cSeFileName[255];
}ST_SBNameArr;

extern	ST_SBNameArr SBArr[SE_MAX];

#endif
